from analyze.models import Files
from utils.functions import clamav_package_install
import clamd

class ClamAvClient():

    def __init__(self, obj_pk, file) -> None:
        self.obj_pk = obj_pk
        self.file = file

    
    def scan_file(self):
        try:
            obj = Files.objects.get(id=self.obj_pk)
            cd = clamd.ClamdUnixSocket()
            scan_result = cd.scan(self.file)
            for key, value in scan_result.items():
                if value[0] == 'FOUND':
                    virus_name = value[1]
                    obj.clamav_scan_summary = virus_name
                    obj.clamav_scan_result = True
                    obj.clamav_scanner_status = "FINISHED"
                    obj.save()
                elif value[0] == 'OK':
                    obj.clamav_scan_summary = "clamav did not find any viruses for this file"
                    obj.clamav_scan_result = False
                    obj.clamav_scanner_status = "FINISHED"
                    obj.save()
                else:
                    error_message = value[1]
                    obj.clamav_scan_summary = "clamav error" 
                    obj.clamav_scan_result = False
                    obj.clamav_scanner_status = "FAILED"
                    obj.clamav_error_message = error_message
                    obj.save()
        except:        
            obj.clamav_scan_summary = "clamav error" 
            obj.clamav_scan_result = False
            obj.clamav_scanner_status = "FAILED"
            obj.save()

            
            
