from typing import Any
from django.core.management.base import BaseCommand
import subprocess
import threading
import logging
import traceback


class Command(BaseCommand):
    help = "make app up and running"

    def initial(self):
        try:
            subprocess.run(["make", "init_run"])
        except:
            logging.error(traceback.format_exc())

    def run_celery_worker(self):
        try:
            subprocess.run(["make", "run_celery"])
        except:
            logging.error(traceback.format_exc())

    def run_celery_beat(self):
        try:
            subprocess.run(["make", "run_periodic_tasks"])
        except:
            logging.error(traceback.format_exc())

    def handle(self, *args, **kwargs):
        t1 = threading.Thread(target=self.initial)
        t2 = threading.Thread(target=self.run_celery_worker)
        t3 = threading.Thread(target= self.run_celery_beat)
        t1.start()
        t2.start()
        t3.start()
        t1.join()
        t2.join()
        t3.join()
