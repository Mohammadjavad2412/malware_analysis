from rest_framework.throttling import BaseThrottle
from malware_analysis.settings import SCAN_DAILY_RATE_LIMIT
from analyze.models import Files
from django.utils import timezone
from datetime import timedelta
import pytz 

class CustomThrottle(BaseThrottle):
    def allow_request(self, request, view):
        current_time = timezone.now()
        time_z = pytz.timezone('Asia/Tehran')
        converted_datetime = current_time.astimezone(time_z)
        start_time = converted_datetime.replace(hour=0, minute=0, second=0, microsecond=0)
        end_time = start_time + timedelta(days=1) - timedelta(microseconds=1)
        objects = Files.objects.filter(created_at__gte = start_time, created_at__lte = end_time)
        count = objects.count()
        if count <= int(SCAN_DAILY_RATE_LIMIT):
            return True
        else:
            return False

class ConditionalThrottle(BaseThrottle):
    def allow_request(self, request, view):
        if request.method == "POST":
            return CustomThrottle().allow_request(request, view)
        return True
        